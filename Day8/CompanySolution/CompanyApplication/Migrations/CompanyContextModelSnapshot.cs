// <auto-generated />
using System;
using CompanyApplication.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompanyApplication.Migrations
{
    [DbContext(typeof(CompanyContext))]
    partial class CompanyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyApplication.Models.Department", b =>
                {
                    b.Property<int>("DepartmentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepartmentNumber"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DepartmentNumber");

                    b.ToTable("departments");

                    b.HasData(
                        new
                        {
                            DepartmentNumber = 1,
                            Name = "Operations"
                        },
                        new
                        {
                            DepartmentNumber = 2,
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("CompanyApplication.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DepartmnetId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DepartmnetId");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("CompanyApplication.Models.EmployeesSkills", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("SkillName")
                        .HasColumnType("text");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("integer");

                    b.HasKey("EmployeeId", "SkillName");

                    b.HasIndex("SkillName");

                    b.ToTable("employeesskills");
                });

            modelBuilder.Entity("CompanyApplication.Models.Skill", b =>
                {
                    b.Property<string>("SkillName")
                        .HasColumnType("text");

                    b.Property<string>("SkillDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SkillName");

                    b.ToTable("skills");
                });

            modelBuilder.Entity("CompanyApplication.Models.Employee", b =>
                {
                    b.HasOne("CompanyApplication.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmnetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CompanyApplication.Models.EmployeesSkills", b =>
                {
                    b.HasOne("CompanyApplication.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyApplication.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("CompanyApplication.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
